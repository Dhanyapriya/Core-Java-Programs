class Node
{
    int data;
     Node next;
     Node prev;// here Node act as datatype because we can't specify datatype for address next;
}
public class Main
{
    static Node head;
    static void create(int data)
    {
        if(head==null)
        {
		    head =new Node();//address creation
		    head.data=data;//data assigning
		    head.next=null;//assigning null to next
		    head.prev=null;//assigning null to previous
        }
        else{
            Node newnode=new Node();//address creation for new node
            newnode.data=data;//data assigning for new node
            newnode.next=null;//assigning null to next of new node
            newnode.prev=null;//assigning null to previous of new node
            Node temp=head;
            while(temp.next!=null)
            {
              temp=temp.next;
            }
            temp.next=newnode;
            newnode.prev=temp;
           temp.next=newnode;
        }
        
    }
    static void insatbeg(int data){ //insertion at Beginning
        Node newnode=new Node();
        newnode.data=data;
        newnode.next=head;
        head.prev=newnode;
        head=newnode;
    }
    static void insatend(int data)   //insertion at End
    {
    Node newnode=new Node();//address creation for new node
            newnode.data=data;//data assigning for new node
            newnode.next=null;//assigning null to next for new node
            newnode.prev=null;
            Node temp=head;
            while(temp.next!=null)
            {
                temp=temp.next;
                 
            }
            
           temp.next=newnode;
           newnode.prev=temp;
    }
    static void insatpos(int data,int pos){//insertion at the position value
        Node newnode=new Node();
        newnode.data=data;
        newnode.next=null;
        newnode.prev=null;
        Node temp=head;
        for(int i=1;i<pos-1;i++){
           temp=temp.next;  
        }
             newnode.next=temp.next;
            temp.next=newnode;
            newnode.prev=newnode.next.prev;
            newnode.next.prev=newnode;
    }
    static void delatbeg(){//Deletion at Beginning
        Node temp=head;
        head=head.next;
        head.prev=null;
        temp=null;
    }
    static void delatend(){//Deletion at Ending
        Node temp=head;
        Node temp1=head;
        while(temp1.next!=null){
            temp=temp1;
            temp1=temp1.next;
        }
        temp.next=null;
        temp1.prev=null;
        temp1=null;
    }
    static void delatpos(int pos){//Deletion at Position
        Node temp=head;
        Node temp1=head;
        for(int i=1;i<pos;i++){
            temp=temp1;
            temp1=temp1.next;
        }
        temp.next=null;
        temp.next=temp1.next;;
        temp1=null;
        temp.next.prev=temp;
    }
	static void display()//Display
	{
		    if(head==null)
		    {
		        System.out.print("Node is Empty");
		    }
		    else
		    {
		        Node temp=head;
		        while(temp!=null){
		            System.out.print(temp.data+" ");
		            temp=temp.next;
		        }
		    }
		    System.out.println();
	}
	public static void main(String[] args) 
	{
    	create(10);
    	create(20);
    	create(30);
    	insatbeg(70);
     	insatend(40);
    	insatpos(50,3);
		display();
		delatbeg();
		display();
		delatend();
		display();
		delatpos(3);
		display();
	}
		
}
